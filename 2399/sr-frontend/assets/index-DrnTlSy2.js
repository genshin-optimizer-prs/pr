import{bp as q,bq as z,br as B,bs as p,bt as A,bu as F,bv as m,bw as V,bx as T,by as I,aM as g,bz as K,ah as G,ai as N,bA as U,bB as L,bC as R,bD as J,bE as W,bF as O,bG as X}from"./index-C8MzUlEg.js";function C(n){throw new Error(`Should not reach this with value ${n}`)}const H=(n,t)=>n.map(e=>e[t]);class P{constructor(t,e){this.root=new Q(t,e)}subset(t){const e=[];return this._subset(t,a=>e.push(...a[q])),e}debugTag(t){throw new Error("Entry tags are only tracked in debug mode")}_subset(t,e){const a=t.length;function c(r,s){r<a?s.subset(t[r]).forEach(o=>c(r+1,o)):e(s.leaf)}c(0,this.root)}}let Q=class E{constructor(t,e){if(this.children=[],t>0)for(const[a,c]of Object.entries(e)){const r=new Map;for(const[s,o]of Object.entries(c))r.set(+s,new E(t-1,o));this.children.push({mask:+a,map:r})}else this.leaf=e}subset(t){return this.children.map(({mask:e,map:a})=>a.get(t&e)).filter(e=>!!e)}};class _{constructor(t){this.root=new x(void 0),this.keys=t}at(t){const e=this.keys.get(t),a=e.reduce((c,r)=>c.child(r),this.root);return a.leaf||(a.leaf=new k(t,e,this.keys,a)),a.leaf}}class x{constructor(t){this.children=new Map,this.parent=t}child(t){let e=this.children.get(t);return e||(e=new x(this),this.children.set(t,e),e)}}class k{constructor(t,e,a,c){this.tag=t,this.id=e,this.keys=a,this.internal=c}with(t){const{keys:e}=this,{id:a,firstReplacedByte:c}=e.combine(this.id,t);let r=this.internal;for(let s=c;s<e.tagLen;s++)r=r.parent;for(let s=c;s<e.tagLen;s++)r=r.child(a[s]);return r.leaf||(r.leaf=new k({...this.tag,...t},a,e,r)),r.leaf}}const b={sum:n=>n.reduce((t,e)=>t+e,0),prod:n=>n.reduce((t,e)=>t*e,1),min:n=>Math.min(...n),max:n=>Math.max(...n),sumfrac:([n,t])=>n/(n+t),unique:([n])=>n},M={match:([n,t])=>n===t?0:1,thres:([n,t])=>n>=t?0:1,lookup:([n],t)=>t[n]??0},w=n=>H(n,"val");let S=class{constructor(t,...e){const a=new z(t);this.nodes=new P(a.tagLen,B(e)),this.cache=new _(a).at({}),this.calc=new _(a).at({}),this.calc.val=this}withTag(t){const e=this.calc.with(t);return e.val??(e.val=Object.assign(new this.constructor(this.cache.keys),this,{cache:this.cache.with(t),calc:e}))}gather(t){return this._gather(this.cache.with(t)).pre}compute(t){return this._compute(t,this.cache)}_gather(t){if(t.val)return t.val;const e=this.nodes.subset(t.id).flatMap(a=>a.op==="reread"?this._gather(t.with(a.tag)).pre:[this.markGathered(t.tag,a,this._compute(a,t))]);return t.val={pre:e}}_compute(t,e){const a=(r,s,o,i)=>Object.freeze({val:r,meta:this.computeMeta(t,r,s,o,i)}),{op:c}=t;switch(c){case"const":return a(t.ex,[],[]);case"sum":case"prod":case"min":case"max":case"sumfrac":{const r=t.x.map(s=>this._compute(s,e));return a(b[c](w(r),t.ex),r,[])}case"thres":case"match":case"lookup":{const r=t.br.map(u=>this._compute(u,e)),s=M[c](w(r),t.ex),o=[...Array(t.x.length)],i=o[s]=this._compute(t.x[s],e);return a(i.val,o,r)}case"subscript":{const r=this._compute(t.br[0],e);return a(t.ex[r.val],[],[r])}case"vtag":return a(e.tag[t.ex]??"",[],[]);case"tag":{const r=e.with(t.tag),s=this._compute(t.x[0],r);return a(s.val,[s],[],r.tag)}case"dtag":{const r=t.br.map(i=>this._compute(i,e)),s=e.with(Object.fromEntries(r.map((i,u)=>[t.ex[u],i.val]))),o=this._compute(t.x[0],s);return a(o.val,[o],r,s.tag)}case"read":{const r=e.with(t.tag),s=this._gather(r),{pre:o}=s,i=t.ex??"unique";if(s[i])return s[i];const u=b[i](w(o),void 0);return s[i]=a(u,o,[],r.tag)}case"custom":{const r=t.x.map(s=>this._compute(s,e));return a(this.computeCustom(w(r),t.ex),r,[])}default:C(c)}}markGathered(t,e,a){return a}computeCustom(t,e){throw new Error(`Unsupported custom node ${e} in Calculator`)}computeMeta(t,e,a,c,r){}};function it(n,t,e){function a(s,o){if(s.val)return s.val;const i=e(s.tag);return s.val=i?[A(i,o)]:t.nodes.subset(s.id).flatMap(u=>u.op!=="reread"?r(u,s):a(s.with(u.tag),o)),s.val}function c(s,o,i){return s.every(u=>u.op==="const")?p(b[o](s.map(u=>u.ex),i)):{op:o,x:s,br:[]}}function r(s,o){const{op:i}=s;switch(i){case"const":return s;case"read":{const u=a(o.with(s.tag),s.ex);return s.ex===void 0?u[0]??p(void 0):c(u,s.ex,s.ex)}case"sum":case"prod":case"min":case"max":case"sumfrac":{const u=s.x.map(l=>r(l,o));return c(u,i,s.ex)}case"thres":case"match":case"lookup":{const u=s.br.map(l=>r(l,o));if(u.every(l=>l.op==="const")){const l=M[s.op](u.map(d=>d.ex),s.ex);return r(s.x[l],o)}return{...s,x:s.x.map(l=>r(l,o)),br:u}}case"subscript":{const u=r(s.br[0],o);return u.op==="const"?p(s.ex[u.ex]):{...s,br:[u]}}case"vtag":return p(o.tag[s.ex]??"");case"tag":return r(s.x[0],o.with(s.tag));case"dtag":{const u=s.br.map(d=>r(d,o));if(u.some(d=>d.op!=="const"))throw new Error("Dynamic tag must be resolvable during detachment");const l=o.with(Object.fromEntries(u.map((d,h)=>[s.ex[h],d.ex])));return r(s.x[0],l)}case"custom":return{...s,x:s.x.map(u=>r(u,o))};default:C(i)}}return n.map(s=>r(s,new _(t.cache.keys).at({})))}function Y(n,t){const e=new Map;function a(c){const r=e.get(c);if(r)return r;const s=t(c,a);return e.set(c,s),s}return Z(n,a)}function Z(n,t){const e=n.map(t);return n.every((a,c)=>a===e[c])?n:e}const tt={arithmetic:b,branching:M},v=Symbol();class et extends S{constructor(t,e){super(t.cache.keys),this.gathering=new Set,this.nodes=t.nodes,this.tagStr=e,this.custom=t.computeCustom}withTag(t){throw new Error("Unimplemented")}_gather(t){if(this.gathering.has(t))throw new Error("Loop detected for {this.tagStr(cache.tag)}");this.gathering.add(t);const e=this.__gather(t);return this.gathering.delete(t),e}__gather(t){return super._gather(t)}_compute(t,e){try{return super._compute(t,e)}catch(a){return{val:NaN,meta:{note:`err: ${a.message} in ${this.tagStr(e.tag)}`,formula:this.nodeString(t),deps:[],[v]:!0}}}}computeMeta(t,e,a,c,r){typeof e!="number"?e=`"${e}"`:Math.round(e)===e?e=`${e}`:e=e.toFixed(2);const s={note:"",formula:`[${e}] ${this.nodeString(t)}`,deps:[...a.map(o=>o==null?void 0:o.meta).filter(o=>!!o),...c.map(o=>o.meta)].flatMap(o=>o[v]?[o]:o.deps),[v]:t.op==="read"};return t.op==="read"?(r=Object.fromEntries(Object.entries(r).filter(([o,i])=>i)),s.note=`gather ${a.length} node(s) for ${this.tagStr(r)}`,s.deps=a.map(o=>o.meta)):delete s.note,s}computeCustom(t,e){return this.custom(t,e)}nodeString(t){return Y([t],(e,a)=>{const{op:c,tag:r,br:s,x:o}=e;let{ex:i}=e;if(c==="const")return`${i}`;if(c==="read")return this.tagStr(r,i);c==="subscript"&&(i=void 0);const u=[];return i&&u.push(JSON.stringify(i)),r&&u.push(this.tagStr(r)),u.push(...s.map(a),...o.map(a)),`${c}(`+u.join(", ")+")"})[0]}}const st=Object.freeze({conds:Object.freeze({})}),{arithmetic:rt}=tt;class at extends S{computeMeta({op:t,ex:e},a,c,r,s){const o={...st},i=c.filter(h=>!!h).map(h=>j(h,o));r.forEach(h=>j(h,o));function u(h,f){return!f.tag&&h?{tag:h,...f}:f}function l(h,f){return u(s,{op:h,ops:f,...o})}function d(h){const f=h.meta,y=f.conds===o.conds;return u(s,y?f:{...f,...o})}if(t==="read"&&e!==void 0){if(e==="min"||e==="max")return d(i.find(h=>h.val===a));t=e,e=void 0}switch(t){case"sum":case"prod":case"min":case"max":case"sumfrac":{let h=i;if(h.length>1){const f=rt[t]([],e);h=h.filter(y=>y.val!==f)}return h.length===1?d(h[0]):h.length===0?l("const",[]):l(t,h)}case"const":case"vtag":case"subscript":return l("const",[]);case"match":case"thres":case"lookup":case"tag":case"dtag":return d(i[0]);case"read":return Object.freeze(d(i[0]));case"custom":return l(e,i);default:F(t)}}markGathered(t,e,a){let c=!1;const r=a.val,s={...Object.freeze(a.meta)};if(t.qt==="cond"){const{src:o,dst:i,sheet:u,q:l}=t;s.conds={[i??"all"]:{[o??"all"]:{[u]:{[l]:r}}}},c=!0}return Object.freeze(s),c?{val:r,meta:s}:a}listFormulas(t){return this.gather(t.tag).filter(e=>e.val).map(({val:e,meta:a})=>m.withTag(a.tag)[e])}listCondFormulas(t){return this.listFormulas(t).map(e=>this.compute(e).meta.conds).reduce($,{})}toDebug(){return new et(this,V)}}function j(n,t){const{conds:e,...a}=n.meta;return t.conds=$(t.conds,e),Object.isFrozen(n.meta)?n:{val:n.val,meta:a}}function $(n,t){return D(n,t,(e,a)=>typeof a=="number"?a:void 0)}function D(n,t,e){const a=e(n,t);if(a!==void 0)return a;if(Object.keys(n).length<Object.keys(t).length&&([n,t]=[t,n]),!Object.keys(t).length)return n;let c=!1;const r={...n};for(const[s,o]of Object.entries(t)){const i=r[s],u=s in r?D(i,o,e):o;i!==u&&(r[s]=u,c=!0)}return c?r:n}function ct(n,...t){return t.map(({tag:e,value:a})=>({tag:{...e,src:n},value:a}))}function ut(n){const{lvl:t,basic:e,skill:a,ult:c,talent:r,ascension:s,eidolon:o}=T.char,{char:i,iso:u,[n.key]:l}=m.withAll("sheet",[]);return[i.reread(l),u.reread(l),t.add(n.level),e.add(n.basic),a.add(n.skill),c.add(n.ult),r.add(n.talent),s.add(n.ascension),o.add(n.eidolon),...I.map(d=>g.char[`statBoost${d}`].add(n.statBoosts[d]?1:0)),...K.map(d=>g.char[`bonusAbility${d}`].add(n.bonusAbilities[d]?1:0)),g.premod.crit_.add(.05),g.premod.crit_dmg_.add(.5)]}function lt(n){if(!n)return[];const{lvl:t,ascension:e,superimpose:a}=T.lightCone;return[m.sheet("lightCone").reread(m.sheet(n.key)),t.add(n.level),e.add(n.ascension),a.add(n.superimpose)]}function ht(n){const{common:{count:t},premod:e}=G(N,{sheet:"relic",et:"self"}),a={},c={};for(const{set:r,stats:s}of n){const o=a[r];o===void 0?a[r]=1:a[r]=o+1;for(const{key:i,value:u}of s){const l=c[i];l===void 0?c[i]=u:c[i]=l+u}}return[m.sheet("agg").reread(m.sheet("relic")),m.withTag({sheet:"relic",qt:"premod"}).reread(m.sheet("dyn")),...Object.entries(c).map(([r,s])=>U(e,r).sheet("dyn").add(s)),...Object.entries(a).map(([r,s])=>t.sheet(r).add(s))]}function dt(n){const t=m.with("et","team"),{self:e,enemy:a,teamBuff:c,notSelfBuff:r}=m.sheet("agg").withAll("et",[]);return[n.map(s=>m.withTag({et:"target",dst:s}).reread(m.withTag({et:"self",dst:null,src:s}))),n.flatMap(s=>{const o=e.with("src",s);return n.map(i=>o.reread(c.withTag({dst:s,src:i,name:null})))}),n.flatMap(s=>{const o=e.with("src",s);return n.filter(i=>i!==s).map(i=>o.reread(r.withTag({dst:s,src:i,name:null})))}),n.map(s=>a.reread(m.withTag({et:"enemyDeBuff",dst:null,src:s,name:null}))),n.flatMap((s,o)=>{const{stackIn:i,stackTmp:u}=m.withAll("qt",[]),l=m.withTag({src:s,et:"self"});return[l.with("qt","stackTmp").add(L(i,0,o+1)),l.with("qt","stackOut").add(R(u.max.with("et","team"),o+1,i))]}),n.map(s=>t.add(m.withTag({src:s,et:"self"}).sum))].flat()}function mt(n,t){return t?Object.entries(t).flatMap(([e,a])=>Object.entries(a).flatMap(([c,r])=>{const s=J(c,e,n);return Object.entries(r).map(([o,i])=>s(o,i))})):[]}function ft(n){const t=W(O,n);return new at(O,X,t)}export{mt as a,ut as c,it as d,lt as l,ht as r,ft as s,dt as t,ct as w};
