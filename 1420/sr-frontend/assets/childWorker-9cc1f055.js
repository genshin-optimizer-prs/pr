(function(){"use strict";function S(e){throw new Error(`Should not reach this with value ${e}`)}function E(e,t){const o=new Set;function n(i){o.has(i)||(t(i,n),o.add(i))}e.forEach(n)}function w(e,t,o,n,i=""){let f=1,s="'use strict';"+i+";const x0=0";const u=new Map;return E(e,(a,p)=>{const r=`x${f++}`;u.set(a,r);const{op:d,x:y,br:k}=a;y.forEach(p),k.forEach(p);const c=y.map($=>u.get($)),h=k.map($=>u.get($));switch(d){case"const":u.set(a,typeof a.ex!="string"?`(${a.ex})`:`('${a.ex}')`);break;case"sum":case"prod":s+=`,${r}=`,c.length?s+=c.join(d=="sum"?"+":"*"):s+=d=="sum"?0:1;break;case"min":case"max":s+=`,${r}=Math.${d}(${c})`;break;case"sumfrac":s+=`,${r}=${c[0]}/(${c[0]} + ${c[1]})`;break;case"match":s+=`,${r}=${h[0]}===${h[1]}?${c[0]}:${c[1]}`;break;case"thres":s+=`,${r}=${h[0]}>=${h[1]}?${c[0]}:${c[1]}`;break;case"subscript":s+=`,${r}=${JSON.stringify(a.ex)}[${h[0]}]`;break;case"read":{const $=a.tag[t];let g=[...new Array(o)].map((T,B)=>`(b[${B}]['${$}'] ?? 0)`);n[$]&&(g=[n[$].toString(),...g]),s+=`,${r}=${g.join("+")}`;break}case"custom":s+=`,${r}=${a.ex}(${c})`;break;case"lookup":s+=`,${r}=([${c}])[(${JSON.stringify(a.ex)})[${h[0]}] ?? 0]`;break;default:S(d)}}),s+=`;return [${e.map(a=>u.get(a))}]`,new Function("b",s)}const m=5e4,x=2e5;let b,l;onmessage=async e=>{try{await M(e)}catch(t){console.log(t),postMessage({resultType:"err",message:JSON.stringify(t)})}};async function M(e){const{data:t}=e,{command:o}=t;switch(o){case"init":v(t);break;case"start":await N();break}}async function v({relicStatsBySlot:e,detachedNodes:t}){b=w(t,"q",6,{}),l=e,postMessage({resultType:"initialized"})}async function N(){let e=[];if(l.head.forEach(t=>{l.hand.forEach(o=>{l.feet.forEach(n=>{l.body.forEach(i=>{l.sphere.forEach(f=>{l.rope.forEach(s=>{const u=b([t.stats,o.stats,n.stats,i.stats,f.stats,s.stats]);if(e.push({value:u[0],ids:{head:t.id,hand:o.id,feet:n.id,body:i.id,sphere:f.id,rope:s.id}}),e.length>x){const a=e.length;e.sort((p,r)=>r.value-p.value),e=e.slice(0,m),postMessage({resultType:"results",builds:e,numBuildsComputed:a}),e=[]}})})})})})}),e.length>0){const t=e.length;e.length>m&&(e.sort((o,n)=>n.value-o.value),e=e.slice(0,m)),postMessage({resultType:"results",builds:e,numBuildsComputed:t})}postMessage({resultType:"done"})}})();
